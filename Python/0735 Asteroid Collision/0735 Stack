"""
735. Asteroid Collision
Medium
https://leetcode.com/problems/asteroid-collision/ 

We are given an array asteroids of integers representing asteroids in a row.

For each asteroid, the absolute value represents its size, and the sign
represents its direction (positive meaning right, negative meaning left).
Each asteroid moves at the same speed.

Find out the state of the asteroids after all collisions. If two asteroids meet,
the smaller one will explode. If both are the same size, both will explode.
Two asteroids moving in the same direction will never meet.
"""


class Solution:
    def asteroidCollision(self, asteroids):
        result = []

        for asteroid in asteroids:
            # Positive values
            if asteroid > 0:
                result.append(asteroid)
            
            # Negative values
            else:
                while result and 0 < result[-1] < -asteroid:
                    result.pop()

                if result and result[-1] == -asteroid:
                    result.pop()
                elif not result or result[-1] < -asteroid:
                    result.append(asteroid)

        return result


if __name__ == '__main__':
    print(Solution().asteroidCollision(asteroids = [5,10,-5]))      # [5,10]
    print(Solution().asteroidCollision(asteroids = [8,-8]))         # []    
    print(Solution().asteroidCollision(asteroids = [10,2,-5]))      # [10]


# Runtime: 218 ms, faster than 51.92% of Python3 online submissions for Asteroid Collision.
# Memory Usage: 15.1 MB, less than 94.48% of Python3 online submissions for Asteroid Collision. 


#%%


# Better solution.  Not mine.
#  https://leetcode.com/problems/asteroid-collision/discuss/904401/Python-Fastest-Solution-Explained-(video-%2B-code)-(beats-100)


class Solution:
    def asteroidCollision(self, asteroids):
        res = []

        for x in asteroids:
            while len(res) and x < 0 and res[-1] > 0:

                if (res[-1] + x) == 0:
                    res.pop()
                    break

                elif abs(x) < res[-1]:
                    break

                else:
                    res.pop()
                    continue
            else:
                res.append(x)

        return res


if __name__ == '__main__':
    print(Solution().asteroidCollision(asteroids = [5,10,-5]))      # [5,10]
    print(Solution().asteroidCollision(asteroids = [8,-8]))         # []    
    print(Solution().asteroidCollision(asteroids = [10,2,-5]))      # [10]


# Runtime: 98 ms, faster than 95.75% of Python3 online submissions for Asteroid Collision.
# Memory Usage: 15.1 MB, less than 73.48% of Python3 online submissions for Asteroid Collision.


#%%
