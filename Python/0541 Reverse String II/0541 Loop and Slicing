"""
541. Reverse String II
Easy
https://leetcode.com/problems/reverse-string-ii/ 

Given a string s and an integer k, reverse the first k characters for every 2k 
characters counting from the start of the string.

If there are fewer than k characters left, reverse all of them. If there are 
less than 2k but greater than or equal to k characters, then reverse the first 
k characters and leave the other as original.
"""


class Solution:
    def reverseStr(self, s, k):
        s = list(s)
        
        for idx in range(0, len(s), (k * 2)):
            s[idx : idx + k] = reversed(s[idx : idx + k])
            
        return ''.join(s) 
 

if __name__ == "__main__":
    lc = Solution() 
    print(lc.reverseStr(s = "abcdefg", k = 2))      # "bacdfeg"
    print(lc.reverseStr(s = "abcd", k = 2))         # "bacd"


# Runtime: 60 ms, faster than 25.35% of Python3 online submissions for Reverse String II.
# Memory Usage: 14 MB, less than 61.86% of Python3 online submissions for Reverse String II.


#%%


class Solution:
    def reverseStr(self, s, k):
        s = list(s)
        
        for idx in range(0, len(s), (k * 2)):
            s[idx : idx + k] = s[idx : idx + k][::-1]
            
        return ''.join(s) 
 

if __name__ == "__main__":
    lc = Solution() 
    print(lc.reverseStr(s = "abcdefg", k = 2))      # "bacdfeg"
    print(lc.reverseStr(s = "abcd", k = 2))         # "bacd"


# Runtime: 33 ms, faster than 87.83% of Python3 online submissions for Reverse String II.
# Memory Usage: 14.1 MB, less than 61.86% of Python3 online submissions for Reverse String II.

