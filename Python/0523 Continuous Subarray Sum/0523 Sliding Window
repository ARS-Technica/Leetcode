"""
523. Continuous Subarray Sum
Medium
https://leetcode.com/problems/continuous-subarray-sum/ 

Given an integer array nums and an integer k, return true if nums has a
continuous subarray of size at least two whose elements sum up to a multiple of k, or false otherwise.

An integer x is a multiple of k if there exists an integer n such that
x = n * k. 0 is always a multiple of k.
"""


class Solution:
    def checkSubarraySum(self, nums: List[int], k: int) -> bool:

        return res


if __name__ == "__main__":
    print(Solution().checkSubarraySum(nums = [23,2,4,6,7], k = 6))              # True
    print(Solution().checkSubarraySum(nums = [23,2,6,4,7], k = 6))              # True
    print(Solution().checkSubarraySum(nums = [23,2,6,4,7], k = 13))             # False


# 
# 


#%%
