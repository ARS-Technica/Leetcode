"""
846. Hand of Straights
Medium
https://leetcode.com/problems/hand-of-straights/description/

Alice has some number of cards and she wants to rearrange the cards into groups
so that each group is of size groupSize, and consists of groupSize consecutive cards.

Given an integer array hand where hand[i] is the value written on the ith card
and an integer groupSize, return true if she can rearrange the cards, or false otherwise.
"""


from collections import defaultdict
import heapq

class Solution:
    def isNStraightHand(self, hand, groupSize): 
        if len(hand) % groupSize:
            return False

        deck = defaultdict(int)

        for num in hand:
            deck[num] += 1

        min_heap = list(deck.keys())
        heapq.heapify(min_heap)

        while min_heap:
            card = min_heap[0]

            for num in range(card, card + groupSize):
                if num not in deck:
                    return False

                deck[num] -= 1

                if deck[num] == 0:
                    if num != min_heap[0]:
                        return False

                    heapq.heappop(min_heap)

        return True


if __name__ == '__main__':
    print(Solution().isNStraightHand(hand = [1,2,3,6,2,3,4,7,8], groupSize = 3))        # True
    print(Solution().isNStraightHand(hand = [1,2,3,4,5], groupSize = 4))                # False
    print(Solution().isNStraightHand(hand = [8,10,12], groupSize = 3))                  # False


# Runtime: 482 ms, faster than 46.10% of Python3 online submissions
# Memory Usage: 15.9 MB, less than 23.16% of Python3 online submissions


#%%
