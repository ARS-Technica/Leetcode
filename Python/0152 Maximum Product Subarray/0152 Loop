"""
152. Maximum Product Subarray
Medium
https://leetcode.com/problems/maximum-product-subarray/description/

Given an integer array nums, find a subarray that has the largest product, and return the product.

The test cases are generated so that the answer will fit in a 32-bit integer.
"""


class Solution:
    def maxProduct(self, nums):
        maxi = nums[0]
        mini = nums[0]
        result = nums[0]

        for num in nums[1:]:
            m, n = maxi, mini

            maxi = max(num, m * num, n * num)
            mini = min(num, m * num, n * num)
            result = max(result, maxi)

        return result


if __name__ == '__main__':
    print(Solution().maxProduct(nums = [2,3,-2,4]))     # 6
    print(Solution().maxProduct(nums = [-2,0,-1]))      # 0
    print(Solution().maxProduct(nums = [-2]))           # -2
    print(Solution().maxProduct(nums = [-4,-3]))        # 12
    print(Solution().maxProduct(nums = [0,2]))          # 2
    print(Solution().maxProduct(nums = [3,-1,4]))       # 4
    print(Solution().maxProduct(nums = [-2,3,-4]))      # 24


# Runtime: 87 ms, faster than 77.75% of Python3 online submissions
# Memory Usage: 14.3 MB, less than 74.99% of Python3 online submissions


#%%
