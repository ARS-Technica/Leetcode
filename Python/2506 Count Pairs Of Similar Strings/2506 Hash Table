"""
2506. Count Pairs Of Similar Strings
Easy
https://leetcode.com/problems/count-pairs-of-similar-strings/description/

You are given a 0-indexed string array words.

Two strings are similar if they consist of the same characters.

For example, "abca" and "cba" are similar since both consist of characters 'a', 'b', and 'c'.
However, "abacba" and "bcfd" are not similar since they do not consist of the same characters.

Return the number of pairs (i, j) such that 0 <= i < j <= word.length - 1 and
the two strings words[i] and words[j] are similar.
"""


# Brute Force


class Solution:
    def similarPairs(self, words):
        length = len(words)
        result = 0
        words = [set(word) for word in words]

        for i in range(length):
            for j in range(i + 1, length):
                if words[i] == words[j]:
                    result += 1

        return result


if __name__ == '__main__':
    print(Solution().similarPairs(words = ["aba","aabb","abcd","bac","aabc"]))  # 2
    print(Solution().similarPairs(words = ["aabb","ab","ba"]))                  # 3
    print(Solution().similarPairs(words = ["nba","cba","dba"]))                 # 0


# Runtime: 70 ms, faster than 93.19% of Python3 online submissions
# Memory Usage: 14 MB, less than 73.31% of Python3 online submissions


#%%
