"""
2446. Determine if Two Events Have Conflict
Easy
https://leetcode.com/problems/determine-if-two-events-have-conflict/

You are given two arrays of strings that represent two inclusive events that
happened on the same day, event1 and event2, where:

- event1 = [startTime1, endTime1] and
- event2 = [startTime2, endTime2].

Event times are valid 24 hours format in the form of HH:MM.

A conflict happens when two events have some non-empty intersection
(i.e., some moment is common to both events).

Return true if there is a conflict between two events. Otherwise, return false.
"""


class Solution:
    def haveConflict(self, event1, event2):
        # if event1[0] < event2[1] and event1[1] > event2[0]:
        if event1[0] <= event2[1] and event1[1] >= event2[0]:
            return True
        return False


if __name__ == '__main__':
    print(Solution().haveConflict(event1 = ["01:15","02:00"], event2 = ["02:00","03:00"]))           # True
    print(Solution().haveConflict(event1 = ["01:00","02:00"], event2 = ["01:20","03:00"]))           # True
    print(Solution().haveConflict(event1 = ["10:00","11:00"], event2 = ["14:00","15:00"]))           # False


# Runtime: 30 ms, faster than 96.70% of Python3 online submissions for Determine if Two Events Have Conflict.
# Memory Usage: 13.7 MB, less than 98.56% of Python3 online submissions for Determine if Two Events Have Conflict.


#%%


class Solution:
    def haveConflict(self, event1, event2):            
        return True if event1[0] <= event2[1] and event1[1] >= event2[0] else False


if __name__ == '__main__':
    print(Solution().haveConflict(event1 = ["01:15","02:00"], event2 = ["02:00","03:00"]))           # True
    print(Solution().haveConflict(event1 = ["01:00","02:00"], event2 = ["01:20","03:00"]))           # True
    print(Solution().haveConflict(event1 = ["10:00","11:00"], event2 = ["14:00","15:00"]))           # False


# Runtime: 53 ms, faster than 67.33% of Python3 online submissions for Determine if Two Events Have Conflict.
# Memory Usage: 13.8 MB, less than 73.93% of Python3 online submissions for Determine if Two Events Have Conflict.


#%%


class Solution:
    def haveConflict(self, event1, event2):            
        return event1[0] <= event2[1] and event1[1] >= event2[0]


if __name__ == '__main__':
    print(Solution().haveConflict(event1 = ["01:15","02:00"], event2 = ["02:00","03:00"]))           # True
    print(Solution().haveConflict(event1 = ["01:00","02:00"], event2 = ["01:20","03:00"]))           # True
    print(Solution().haveConflict(event1 = ["10:00","11:00"], event2 = ["14:00","15:00"]))           # False


# Runtime: 60 ms, faster than 44.42% of Python3 online submissions for Determine if Two Events Have Conflict.
# Memory Usage: 13.8 MB, less than 73.93% of Python3 online submissions for Determine if Two Events Have Conflict.


#%%
