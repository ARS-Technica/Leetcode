
# Better solution. Not mine.
# https://github.com/neetcode-gh/leetcode/blob/main/190-Reverse-Bits.py


class Solution:
    def reverseBits(self, n):
        res = 0
        
        for i in range(32):
            bit = (n >> i) & 1
            res = res | (bit << (31 - i))
            
        return res
  

if __name__ == "__main__":
    lc = Solution() 
    print(lc.reverseBits(0b00000010100101000001111010011100))           # 964176192
    print(lc.reverseBits(0b11111111111111111111111111111101))           # 3221225471 


# Runtime: 24 ms, faster than 99.06% of Python3 online submissions for Reverse Bits.
# Memory Usage: 13.8 MB, less than 97.48% of Python3 online submissions for Reverse Bits.
 
#%%
