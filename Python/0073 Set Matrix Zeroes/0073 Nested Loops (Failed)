"""
73. Set Matrix Zeroes
Medium
https://leetcode.com/problems/set-matrix-zeroes/ 

Given an m x n integer matrix matrix, if an element is 0, set its entire row 
and column to 0's.

You must do it in place.
"""


class Solution:
    def setZeroes(self, matrix):
        columns = []
        rows = []
        
        for i in matrix:
            #print(i)
            if 0 in i:
                #print(matrix.index(i))
                rows.append(matrix.index(i)) 
                #print(i.index(0))
                columns.append(i.index(0)) 
                
        return columns, rows
 

if __name__ == "__main__":
    lc = Solution() 
    print(lc.setZeroes([[1,1,1],[1,0,1],[1,1,1]]))              # [[1,0,1],[0,0,0],[1,0,1]]
    #print(lc.setZeroes([[0,1,2,0],[3,4,5,2],[1,3,1,5]]))        # [[0,0,0,0],[0,4,5,0],[0,3,1,0]]


# [1, 1, 1]
# [0, 0, 0]
# [1, 1, 1]


#%%
 

class Solution:
    def setZeroes(self, matrix):
        columns = []
        rows = []
        
        for i in matrix:
            if 0 in i: 
                rows.append(matrix.index(i)) 
                columns.append(i.index(0)) 
                
        #print(columns, rows)

        for i in matrix:
            if matrix.index(i) in rows:
                for j in range(len(i)):
                    i[j] = 0 
                print(i)
            else:
                for j in range(len(i)):
                    print(j, i[j])
                    
                    '''
                    for n in columns:
                        j[n] = 0
                    '''
                    
                    '''
                    if matrix.index(j) in columns:
                        #print(matrix[i][j])
                        i[j] = 0
                    '''
                print(i)


if __name__ == "__main__":
    lc = Solution() 
    print(lc.setZeroes([[1,1,1],[1,0,1],[1,1,1]]))              # [[1,0,1],[0,0,0],[1,0,1]]
    #print(lc.setZeroes([[0,1,2,0],[3,4,5,2],[1,3,1,5]]))        # [[0,0,0,0],[0,4,5,0],[0,3,1,0]]


# [1, 1, 1]
# [0, 0, 0]
# [1, 1, 1]


#%%



class Solution:
    def setZeroes(self, matrix):
        columns = []
        rows = []
        
        for i in matrix:
            if 0 in i: 
                rows.append(matrix.index(i)) 
                columns.append(i.index(0)) 
                
        #print(columns, rows)

        for i in matrix:
            if matrix.index(i) in rows:
                for j in range(len(i)):
                    i[j] = 0 
                print(i)
                

            else:
                for k in range(len(i)):
                    #print(i[k])
                    if k not in columns:
                        pass
                    else:
                        i[k] = 0
                print(i)
        
        print(matrix)


if __name__ == "__main__":
    lc = Solution() 
    print(lc.setZeroes([[1,1,1],[1,0,1],[1,1,1]]))              # [[1,0,1],[0,0,0],[1,0,1]]
    #print(lc.setZeroes([[0,1,2,0],[3,4,5,2],[1,3,1,5]]))        # [[0,0,0,0],[0,4,5,0],[0,3,1,0]]


# [[1, 0, 1], [1, 0, 1], [1, 0, 1]]


#%%


class Solution:
    def setZeroes(self, matrix):
        columns = []
        rows = []
        
        for i in matrix:
            if 0 in i: 
                rows.append(matrix.index(i)) 
                columns.append(i.index(0)) 
                
        print(rows, columns)

        for i in matrix:
            if matrix.index(i) in rows:
                for j in range(len(i)):
                    i[j] = 0 
                
        for i in matrix:
            for j in i:
                if j in columns:
                    i[j] = 0

        print(matrix)


if __name__ == "__main__":
    lc = Solution() 
    print(lc.setZeroes([[1,1,1],[1,0,1],[1,1,1]]))              # [[1,0,1],[0,0,0],[1,0,1]]
    print(lc.setZeroes([[0,1,2,0],[3,4,5,2],[1,3,1,5]]))        # [[0,0,0,0],[0,4,5,0],[0,3,1,0]]


# Fails setZeroes([[0],[1]])


#%%


class Solution:
    def setZeroes(self, matrix):
        columns = []
        rows = []
                     
        for row in matrix:
            #print(matrix.index(row), row)           
            for column in range(len(row)):
                #print(column, ':', row[column])                
                if row[column] == 0:
                    columns.append(column)
                    rows.append(matrix.index(row))
                              
        print('Rows', rows, 'Columns', columns) 

        for i in matrix:
            if matrix.index(i) in rows:
                for j in range(len(i)):
                    i[j] = 0 
                
        for i in matrix:
            for j in i:
                if j in columns:
                #for j in range(len(i)):
                    i[j] = 0

        print(matrix)


if __name__ == "__main__":
    lc = Solution() 
    print(lc.setZeroes([[1,1,1],[1,0,1],[1,1,1]]))              # [[1,0,1],[0,0,0],[1,0,1]]
    print(lc.setZeroes([[0,1,2,0],[3,4,5,2],[1,3,1,5]]))        # [[0,0,0,0],[0,4,5,0],[0,3,1,0]]
    print(lc.setZeroes([[0],[1]]))                              # [[0],[0]]
    

# Rows [1] Columns [1]
# [[1, 0, 1], [0, 0, 0], [1, 0, 1]]
# None
# Rows [0, 0] Columns [0, 3]
# [[0, 0, 0, 0], [0, 4, 5, 0], [0, 3, 1, 0]]
# None
# Rows [0] Columns [0]
# [[0], [1]]
# None


#%%


class Solution:
    def setZeroes(self, matrix):
        columns = []
        rows = []
                     
        for row in range(len(matrix)):    
            for column in range(len(matrix[0])):             
                if matrix[row][column] == 0:
                    columns.append(column)
                    rows.append(row) 

        for i in matrix:
            if matrix.index(i) in rows:
                for j in range(len(i)):
                    i[j] = 0 
                
        for i in matrix:
            for j in i:
                if j in columns:
                #for j in range(len(i)):
                    i[j] = 0

        print(matrix)


if __name__ == "__main__":
    lc = Solution() 
    print(lc.setZeroes([[1,1,1],[1,0,1],[1,1,1]]))              # [[1,0,1],[0,0,0],[1,0,1]]
    print(lc.setZeroes([[0,1,2,0],[3,4,5,2],[1,3,1,5]]))        # [[0,0,0,0],[0,4,5,0],[0,3,1,0]]
    print(lc.setZeroes([[0],[1]]))                              # [[0],[0]]
    

# [[1, 0, 1], [0, 0, 0], [1, 0, 1]]
# None
# [[0, 0, 0, 0], [0, 4, 5, 0], [0, 3, 1, 0]]
# None
# [[0], [1]]
# None


#%%


# Really struggled with this one.  It was my first encounter with a Matrix problem.
