"""
2126. Destroying Asteroids
Medium
https://leetcode.com/problems/destroying-asteroids/

ou are given an integer mass, which represents the original mass of a planet.
You are further given an integer array asteroids, where asteroids[i] is the
mass of the ith asteroid.

You can arrange for the planet to collide with the asteroids in any arbitrary
order. If the mass of the planet is greater than or equal to the mass of the
asteroid, the asteroid is destroyed and the planet gains the mass of the asteroid.
Otherwise, the planet is destroyed.

Return true if all asteroids can be destroyed. Otherwise, return false.
"""


class Solution:
    def asteroidsDestroyed(self, mass, asteroids):
        asteroids = sorted(asteroids)

        for i in asteroids:
            if mass < i:
                return False

            mass += i

        return True


if __name__ == '__main__':
    print(Solution().asteroidsDestroyed(mass = 10, asteroids = [3,9,19,5,21]))      # true
    print(Solution().asteroidsDestroyed(mass = 5, asteroids = [4,9,23,4]))          # false


# Runtime: 1513 ms, faster than 73.95% of Python3 online submissions for Destroying Asteroids.
# Memory Usage: 27.7 MB, less than 79.21% of Python3 online submissions for Destroying Asteroids.

# The simpliest and most straightforward solution leaves little to improve upon in terms of efficency

#%%


from itertools import accumulate


class Solution:
    def asteroidsDestroyed(self, mass, asteroids):
        asteroids = sorted(asteroids) 
        planet = list(accumulate([mass] + asteroids))        

        return not any(planet[i] < asteroids[i] for i in range(len(asteroids)))


if __name__ == '__main__':
    print(Solution().asteroidsDestroyed(mass = 10, asteroids = [3,9,19,5,21]))      # true
    print(Solution().asteroidsDestroyed(mass = 5, asteroids = [4,9,23,4]))          # false


# Runtime: 1612 ms, faster than 70.79% of Python3 online submissions for Destroying Asteroids.
# Memory Usage: 27.9 MB, less than 39.74% of Python3 online submissions for Destroying Asteroids.


#%%


from itertools import accumulate


class Solution:
    def asteroidsDestroyed(self, mass, asteroids):
        asteroids = sorted(asteroids)
        planet = [mass] + asteroids
        planet = list(accumulate(planet))

        for i in range(len(asteroids)):
            if planet[i] < asteroids[i]:
                return False

        return True


if __name__ == '__main__':
    print(Solution().asteroidsDestroyed(mass = 10, asteroids = [3,9,19,5,21]))      # true
    print(Solution().asteroidsDestroyed(mass = 5, asteroids = [4,9,23,4]))          # false


# Runtime: 1208 ms, faster than 81.05% of Python3 online submissions for Destroying Asteroids.
# Memory Usage: 27.8 MB, less than 39.74% of Python3 online submissions for Destroying Asteroids.

# Using accumulate improves efficency 

#%%
