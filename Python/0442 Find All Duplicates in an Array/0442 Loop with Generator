# Using a generator instead of returning an array improves runtime marginally and memory usage significantly.


class Solution:
    def findDuplicates(self, nums):            
        for num in nums: 
            if nums[abs(num) - 1] < 0:
                #print(abs(num))
                yield(abs(num))
            nums[abs(num) - 1] *= -1 

if __name__ == "__main__":
    lc = Solution() 
    print(lc.findDuplicates([4,3,2,7,8,2,3,1]))     # [2,3]
    print(lc.findDuplicates([1,1,2]))               # [1]
    print(lc.findDuplicates([1]))                   # []


# Runtime: 424 ms, faster than 58.37% of Python3 online submissions for Find All Duplicates in an Array.
# Memory Usage: 21 MB, less than 98.56% of Python3 online submissions for Find All Duplicates in an Array.

