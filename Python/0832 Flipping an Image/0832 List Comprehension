"""
832. Flipping an Image
Easy
https://leetcode.com/problems/flipping-an-image/

Given an n x n binary matrix image, flip the image horizontally, then invert it, and return the resulting image.

To flip an image horizontally means that each row of the image is reversed.

For example, flipping [1,1,0] horizontally results in [0,1,1].
To invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0.

For example, inverting [0,1,1] results in [1,0,0].

Constraints:

n == image.length
n == image[i].length
1 <= n <= 20
images[i][j] is either 0 or 1.
"""


# Not mine.
# https://leetcode.com/problems/flipping-an-image/discuss/550889/The-Python3-One-Liner


class Solution:
    def flipAndInvertImage(self, image):                  
        return [[0 if x==1 else 1 for x in x][::-1] for x in image] 


if __name__ == "__main__":
    lc = Solution() 
    print(lc.flipAndInvertImage(image = [[1,1,0],[1,0,1],[0,0,0]]))                         # [[1,0,0],[0,1,0],[1,1,1]]
    print(lc.flipAndInvertImage(image = [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]))         # [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]


# Runtime: 58 ms, faster than 74.16% of Python3 online submissions for Flipping an Image.
# Memory Usage: 13.9 MB, less than 21.92% of Python3 online submissions for Flipping an Image.


#%%

# Not mine.
# https://leetcode.com/problems/flipping-an-image/discuss/1313100/Python-or-Fast-and-simple-one-liner


class Solution:
    def flipAndInvertImage(self, image):                  
        return [[0 if x==1 else 1 for x in row[::-1]] for row in image]


if __name__ == "__main__":
    lc = Solution() 
    print(lc.flipAndInvertImage(image = [[1,1,0],[1,0,1],[0,0,0]]))                         # [[1,0,0],[0,1,0],[1,1,1]]
    print(lc.flipAndInvertImage(image = [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]))         # [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]


# Runtime: 50 ms, faster than 91.41% of Python3 online submissions for Flipping an Image.
# Memory Usage: 13.9 MB, less than 68.05% of Python3 online submissions for Flipping an Image.


#%%

# Not mine.
# https://leetcode.com/problems/flipping-an-image/discuss/930554/Python.-One-liner-cool-and-clear-solution.-Runtime%3A-faster-than-98.82.-Memory%3A-less-than-100.00


class Solution:
    def flipAndInvertImage(self, image):                  
        return [[num ^ 1 for num in line[::-1]] for line in image] 


if __name__ == "__main__":
    lc = Solution() 
    print(lc.flipAndInvertImage(image = [[1,1,0],[1,0,1],[0,0,0]]))                         # [[1,0,0],[0,1,0],[1,1,1]]
    print(lc.flipAndInvertImage(image = [[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]))         # [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]


# Runtime: 56 ms, faster than 79.71% of Python3 online submissions for Flipping an Image.
# Memory Usage: 13.9 MB, less than 21.92% of Python3 online submissions for Flipping an Image.


#%%
