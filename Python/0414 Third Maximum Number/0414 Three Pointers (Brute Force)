"""
414. Third Maximum Number
Easy
https://leetcode.com/problems/third-maximum-number/

Given an integer array nums, return the third distinct maximum number in this
array. If the third maximum does not exist, return the maximum number.
"""


# Three Pointer Solution (Brute Force)
# Alternate solution. Inspired by:
# https://leetcode.com/problems/third-maximum-number/discuss/1461970/Simple-Python-O(n)-three-pointer-solution


class Solution:
    def thirdMax(self, nums):
        max1 = max2 = max3 = -float("inf")
        unique = set()

        for n in nums:
            if n not in unique:
                unique.add(n)
                if n > max1:
                    max3 = max2
                    max2 = max1
                    max1 = n
                elif n > max2:
                    max3 = max2
                    max2 = n
                elif n > max3:
                    max3 = n

        return max3 if max3 != -float("inf") else max1


if __name__ == '__main__':
    print(Solution().thirdMax(nums = [3,2,1]))          # 1
    print(Solution().thirdMax(nums = [1,2]))            # 2   
    print(Solution().thirdMax(nums = [2,2,3,1]))        # 1
    print(Solution().thirdMax(nums = [1,1,2]))          # 2
    print(Solution().thirdMax(nums = [5,2,2]))          # 5
    print(Solution().thirdMax(nums = [1,2,2,5,3,5]))    # 2


# Runtime: 110 ms, faster than 51.31% of Python3 online submissions for Third Maximum Number.
# Memory Usage: 15.5 MB, less than 52.18% of Python3 online submissions for Third Maximum Number.


#%%
