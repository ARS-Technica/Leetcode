# Not mine.
# https://leetcode.com/problems/search-in-rotated-sorted-array/discuss/1738259/Python-easy-understanding


class Solution:
    def search(self, nums, target):
	low = 0
    high = len(nums) - 1
    
    while low <= high:
        mid = low + ((high-low) // 2)
        
        if nums[mid] == target:
            return mid
        
        if nums[low]<=nums[mid]: 
            if nums[low]<=target<=nums[mid]:
                high=mid-1
            else:
                low=mid+1
        else: 
            if nums[mid]<=target<=nums[high]:
                low=mid+1
            else:
                high=mid-1
        
    return -1     


if __name__ == "__main__":
    lc = Solution() 
    print(lc.search([4,5,6,7,0,1,2], 0))        # 4
    print(lc.search([4,5,6,7,0,1,2], 3))        # -1
    print(lc.search([1], 0))                    # -1


# Runtime: 70 ms, faster than 31.21% of Python3 online submissions for Search in Rotated Sorted Array.
# Memory Usage: 14.4 MB, less than 47.91% of Python3 online submissions for Search in Rotated Sorted Array.
