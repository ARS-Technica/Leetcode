"""
1876. Substrings of Size Three with Distinct Characters
Easy
https://leetcode.com/problems/substrings-of-size-three-with-distinct-characters/ 

A string is good if there are no repeated characters.

Given a string s, return the number of good substrings of length three in s.

Note that if there are multiple occurrences of the same substring, every
occurrence should be counted.

A substring is a contiguous sequence of characters in a string.
""" 


class Solution:
    def countGoodSubstrings(self, s: str) -> int:
        left, right = 0, 0        # Intialize our window's bound
        res = 0
        window = []

        # Iterate over elements in our input
        while right < len(s):
            window.append(s[right])

            # Expand the window 
            if right >= 2:
                # print(window)

                # Process the current window
                if len(set(window)) == 3:        
                    res += 1
                # Contract the window
                del window[0]
                left += 1
                
            right += 1              

        return res 


if __name__ == "__main__":
    print(Solution().countGoodSubstrings(s = "xyzzaz"))             # 1
    print(Solution().countGoodSubstrings(s = "aababcabc"))          # 4 


# Runtime: 38 ms, faster than 87.83% of Python3 online submissions for Substrings of Size Three with Distinct Characters.
# Memory Usage: 13.9 MB, less than 58.59% of Python3 online submissions for Substrings of Size Three with Distinct Characters.


#%%
