"""
1876. Substrings of Size Three with Distinct Characters
Easy
https://leetcode.com/problems/substrings-of-size-three-with-distinct-characters/ 

A string is good if there are no repeated characters.

Given a string s, return the number of good substrings of length three in s.

Note that if there are multiple occurrences of the same substring, every
occurrence should be counted.

A substring is a contiguous sequence of characters in a string.
""" 

# Alternative solution. Not mine.
# https://leetcode.com/problems/substrings-of-size-three-with-distinct-characters/discuss/1643675/Succinct-Python-solution-O(n)


class Solution:
    def countGoodSubstrings(self, s: str) -> int:
        def match(t):
            return len(set(t)) == 3
        
        return sum(map(match, zip(s, s[1:], s[2:])))
 

if __name__ == "__main__":
    print(Solution().countGoodSubstrings(s = "xyzzaz"))             # 1
    print(Solution().countGoodSubstrings(s = "aababcabc"))          # 4 


# Runtime: 35 ms, faster than 93.00% of Python3 online submissions for Substrings of Size Three with Distinct Characters.
# Memory Usage: 13.7 MB, less than 95.26% of Python3 online submissions for Substrings of Size Three with Distinct Characters.


#%%
