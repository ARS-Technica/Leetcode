
# Better solution. Not mine.
# https://leetcode.com/problems/search-insert-position/discuss/331168/Simple-Solutions-in-Python3-(beats-~99)-(Linear-Scan-and-Binary-Search)


import bisect

def searchInsert(nums, target):
    return bisect.bisect_left(nums, target)
        

if __name__ == "__main__":
    print(searchInsert([1,3,5,6], 5))   # 2         
    print(searchInsert([1,3,5,6], 2))   # 1          
    print(searchInsert([1,3,5,6], 7))   # 4          
    print(searchInsert([1,3,5,6], 0))   # 0  
    print(searchInsert([1], 0))         # 0 


# Runtime: 52 ms, faster than 80.62% of Python3 online submissions for Search Insert Position.
# Memory Usage: 14.8 MB, less than 76.10% of Python3 online submissions for Search Insert Position.
  
