
# My attempts to improve the script result in even worse results.


def searchInsert(nums, target):
    left = 0 
    right = len(nums)
    
    while left < right:
        middle = (left + right) // 2
        
        if target > nums[middle]:
            left = middle + 1
        else:
            right = middle

    return left
        

if __name__ == "__main__":
    print(searchInsert([1,3,5,6], 5))   # 2         
    print(searchInsert([1,3,5,6], 2))   # 1          
    print(searchInsert([1,3,5,6], 7))   # 4          
    print(searchInsert([1,3,5,6], 0))   # 0  
    print(searchInsert([1], 0))         # 0 


# Runtime: 82 ms, faster than 31.16% of Python3 online submissions for Search Insert Position.
# Memory Usage: 14.8 MB, less than 57.31% of Python3 online submissions for Search Insert Position.
  
