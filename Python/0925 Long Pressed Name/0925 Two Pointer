"""
925. Long Pressed Name
Easy
https://leetcode.com/problems/long-pressed-name/ 

Your friend is typing his name into a keyboard. Sometimes, when typing a 
character c, the key might get long pressed, and the character will be typed 1 
or more times.

You examine the typed characters of the keyboard. Return True if it is possible 
that it was your friends name, with some characters (possibly none) being long 
pressed.
"""


class Solution:
    def isLongPressedName(self, name, typed):  
        if set(name) !=  set(typed):
            return False
        
        t = 0
        n = 0
        
        while t < len(typed):
            if n < len(name) and name[n] == typed[t]:
                n +=1
            elif t == 0 or typed[t] != typed[t-1]:
                return False
            t +=1
            
        #return True
        return t >= len(typed) and n >= len(name)


if __name__ == "__main__":
    lc = Solution() 
    print(lc.isLongPressedName(name = "alex", typed = "aaleex"))                    # true
    print(lc.isLongPressedName(name = "saeed", typed = "ssaaedd"))                  # false
    print(lc.isLongPressedName(name = "xnhtq", typed = "xhhttqq"))                  # false
    print(lc.isLongPressedName(name = "rick", typed = "kric"))                      # false
    print(lc.isLongPressedName(name = "alex", typed = "aaleexa"))                   # false 
    print(lc.isLongPressedName(name = "vtkgn", typed = "vttkgnn"))                  # true
    print(lc.isLongPressedName(name = "alexd", typed = "ale"))                      # false   
    print(lc.isLongPressedName(name = "kikcxmvzi", typed = "kiikcxxmmvvzz"))        # false    


# Runtime: 36 ms, faster than 81.44% of Python3 online submissions for Long Pressed Name.
# Memory Usage: 14 MB, less than 38.66% of Python3 online submissions for Long Pressed Name.

