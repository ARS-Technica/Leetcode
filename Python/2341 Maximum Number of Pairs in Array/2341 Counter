"""
2341. Maximum Number of Pairs in Array
Easy
https://leetcode.com/problems/maximum-number-of-pairs-in-array/

You are given a 0-indexed integer array nums. In one operation, you may do the following:

Choose two integers in nums that are equal.
Remove both integers from nums, forming a pair.
The operation is done on nums as many times as possible.

Return a 0-indexed integer array answer of size 2 where answer[0] is the number
of pairs that are formed and answer[1] is the number of leftover integers in nums
after doing the operation as many times as possible.
"""


from collections import Counter


class Solution:
    def numberOfPairs(self, nums):
        frequency = Counter(nums) 

        # print( list( divmod(count, 2) for count in frequency.values() ) )
        # [(1, 0), (1, 0), (1, 1)]

        remainders = [divmod(count, 2) for count in frequency.values()]
        return list(map(sum, zip(*remainders) ))

        
if __name__ == '__main__':
    print(Solution().numberOfPairs(nums = [1,3,2,1,3,2,2]))     # [3,1]
    print(Solution().numberOfPairs(nums = [1,1]))               # [1,0]


# Runtime: 54 ms, faster than 75.06% of Python3 online submissions for Maximum Number of Pairs in Array.
# Memory Usage: 13.8 MB, less than 62.95% of Python3 online submissions for Maximum Number of Pairs in Array.


#%%


from collections import Counter


class Solution:
    def numberOfPairs(self, nums):
        return list(map(sum, zip(*[divmod(count, 2) for count in Counter(nums).values()])))

        
if __name__ == '__main__':
    print(Solution().numberOfPairs(nums = [1,3,2,1,3,2,2]))     # [3,1]
    print(Solution().numberOfPairs(nums = [1,1]))               # [1,0]


# Runtime: 67 ms, faster than 51.03% of Python3 online submissions for Maximum Number of Pairs in Array.
# Memory Usage: 13.9 MB, less than 62.95% of Python3 online submissions for Maximum Number of Pairs in Array.


#%%
