"""
1653. Minimum Deletions to Make String Balanced
Medium
https://leetcode.com/problems/minimum-deletions-to-make-string-balanced/description/

You are given a string s consisting only of characters 'a' and 'b'.

You can delete any number of characters in s to make s balanced. s is balanced
if there is no pair of indices (i,j) such that i < j and s[i] = 'b' and s[j]= 'a'.

Return the minimum number of deletions needed to make s balanced.
"""


# Stack solution. Not mine.
# https://leetcode.com/problems/minimum-deletions-to-make-string-balanced/solutions/1452670/python-stack-beats-95/


class Solution:
    def minimumDeletions(self, s):
        count = 0
        stack = []

        for character in s:
            if character == 'b':
                stack.append(character)
            elif stack:
                stack.pop()
                count += 1

        return count


if __name__ == '__main__':
    print(Solution().minimumDeletions(s = "aababbab"))                          # 2
    print(Solution().minimumDeletions(s = "bbaaaaabb"))                         # 2


# Runtime: 291 ms, faster than 89.51% of Python3 online submissions
# Memory Usage: 15.3 MB less than 80.42% of Python3 online submissions


#%%
