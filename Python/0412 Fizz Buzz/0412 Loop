"""
412. Fizz Buzz
Easy
https://leetcode.com/problems/fizz-buzz/

Given an integer n, return a string array answer (1-indexed) where:

answer[i] == "FizzBuzz" if i is divisible by 3 and 5.
answer[i] == "Fizz" if i is divisible by 3.
answer[i] == "Buzz" if i is divisible by 5.
answer[i] == i (as a string) if none of the above conditions are true.
"""


class Solution:
    def fizzBuzz(self, n):
        result = []

        for i in range(1, n + 1):
            if (i % 3 == 0 and i % 5 == 0):
                result.append("FizzBuzz")
            elif i % 3 == 0:
                result.append("Fizz")
            elif i % 5 == 0:
                result.append("Buzz")
            else:
                result.append(str(i))

        return result


if __name__ == "__main__":
    print(Solution().fizzBuzz(n = 3))    # ["1","2","Fizz"]
    print(Solution().fizzBuzz(n = 5))    # ["1","2","Fizz","4","Buzz"]
    print(Solution().fizzBuzz(n = 15))   # ["1","2","Fizz","4","Buzz","Fizz","7","8","Fizz","Buzz","11","Fizz","13","14","FizzBuzz"]


# Runtime: 43 ms, faster than 79.78% of Python3 online submissions for Continuous Subarray Sum.
# Memory Usage: 14.9 MB, less than 78.91% of Python3 online submissions for Continuous Subarray Sum. 


#%%


class Solution:
    def fizzBuzz(self, n):
        result = []

        for i in range(1, n + 1):
            if i % 15 == 0:
                result.append("FizzBuzz") 
            elif i % 3 == 0:
                result.append("Fizz")
            elif i % 5 == 0:
                result.append("Buzz")
            else:
                result.append(str(i))

        return result


if __name__ == "__main__":
    print(Solution().fizzBuzz(n = 3))    # ["1","2","Fizz"]
    print(Solution().fizzBuzz(n = 5))    # ["1","2","Fizz","4","Buzz"]
    print(Solution().fizzBuzz(n = 15))   # ["1","2","Fizz","4","Buzz","Fizz","7","8","Fizz","Buzz","11","Fizz","13","14","FizzBuzz"]


# Runtime: 50 ms, faster than 47.71% of Python3 online submissions for Continuous Subarray Sum.
# Memory Usage: 14.9 MB, less than 78.91% of Python3 online submissions for Continuous Subarray Sum. 


#%%
