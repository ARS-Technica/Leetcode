# -*- coding: utf-8 -*-
"""
1768. Merge Strings Alternately
Easy
https://leetcode.com/problems/merge-strings-alternately/ 

You are given two strings word1 and word2. Merge the strings by adding letters 
in alternating order, starting with word1. If a string is longer than the other, 
append the additional letters onto the end of the merged string.

Return the merged string.

Constraints:

1 <= word1.length, word2.length <= 100
word1 and word2 consist of lowercase English letters.
"""


class Solution:
    def mergeAlternately(self, word1, word2):
        res = ''
        
        for idx in range(min(len(word1),len(word2))):
            res += word1[idx] + word2[idx]
            
        return res + word1[idx+1:] + word2[idx+1:]
 

if __name__ == "__main__":
    lc = Solution() 
    print(lc.mergeAlternately(word1 = "abc", word2 = "pqr"))       # "apbqcr"
    print(lc.mergeAlternately(word1 = "ab", word2 = "pqrs"))       # "apbqrs"
    print(lc.mergeAlternately(word1 = "abcd", word2 = "pq"))       # "apbqcd"


# Runtime: 31 ms, faster than 89.70% of Python3 online submissions for Merge Strings Alternately.
# Memory Usage: 13.9 MB, less than 73.07% of Python3 online submissions for Merge Strings Alternately.


#%%
