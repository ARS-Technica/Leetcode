"""
Naive Solution
I initially thought that this would be faster than a list
comprehension that converted the integer to a string, but
I was surprised to find that I was wrong.
"""


class Solution:
    def hammingWeight(self, n):
        return bin(x).count("1")
 

if __name__ == "__main__":
    lc = Solution() 
    print(lc.hammingWeight(00000000000000000000000000001011))       # 3
    print(lc.hammingWeight(00000000000000000000000010000000))       # 1
    print(lc.hammingWeight(11111111111111111111111111111101))       # 31


# Runtime: 62 ms, faster than 12.69% of Python3 online submissions for Number of 1 Bits.
# Memory Usage: 13.8 MB, less than 72.79% of Python3 online submissions for Number of 1 Bits.
