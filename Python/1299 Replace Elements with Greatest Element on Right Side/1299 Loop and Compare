
# Better solution. Not mine.
# https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side/discuss/1583372/Python-3-O(n)-time-O(1)-memory


class Solution:
    def replaceElements(self, arr):
        curMax = -1
        for i in range(len(arr)-1, -1, -1):
            arr[i], curMax = curMax, max(arr[i], curMax)
        return arr


if __name__ == "__main__":
    lc = Solution() 
    print(lc.replaceElements([17,18,5,4,6,1]))          # [18,6,6,6,1,-1]
    print(lc.replaceElements([400]))                    # [-1] 


# Runtime: 286 ms, faster than 32.69% of Python3 online submissions for Replace Elements with Greatest Element on Right Side.
# Memory Usage: 15.2 MB, less than 82.56% of Python3 online submissions for Replace Elements with Greatest Element on Right Side.
