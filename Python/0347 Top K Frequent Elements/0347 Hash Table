"""
347. Top K Frequent Elements
Medium
https://leetcode.com/problems/top-k-frequent-elements/ 

Given an integer array nums and an integer k, return the k most frequent
elements. You may return the answer in any order.
"""


# Not mine.
# https://leetcode.com/problems/top-k-frequent-elements/discuss/81697/Python-O(n)-solution-without-sort-without-heap-without-quickselect


class Solution(object):
    def topKFrequent(self, nums, k):
        hashmap = {}
        frequency = {}

        for i in range(0, len(nums)):
            if nums[i] not in hashmap:
                hashmap[nums[i]] = 1
            else:
                hashmap[nums[i]] += 1

        for z,v in hashmap.items():
            if v not in frequency:
                frequency[v] = [z]
            else:
                frequency[v].append(z)

        result = []

        for x in range(len(nums), 0, -1):
            if x in frequency:

                for i in frequency[x]:
                    result.append(i)

        return [result[x] for x in range(0, k)]


if __name__ == '__main__':
    print(Solution().topKFrequent(nums = [1,1,1,2,2,3], k = 2))                 # [1,2]
    print(Solution().topKFrequent(nums = [1], k = 1))                           # [1]


# Runtime: 115 ms, faster than 88.51% of Python3 online submissions for Top K Frequent Elements.
# Memory Usage: 18.9 MB, less than 31.66% of Python3 online submissions for Top K Frequent Elements.


#%%
