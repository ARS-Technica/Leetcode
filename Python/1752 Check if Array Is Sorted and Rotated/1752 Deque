"""
1752. Check if Array Is Sorted and Rotated
Easy
https://leetcode.com/problems/check-if-array-is-sorted-and-rotated/description/

Given an array nums, return true if the array was originally sorted in
non-decreasing order, then rotated some number of positions (including zero).
Otherwise, return false.

There may be duplicates in the original array.

Note: An array A rotated by x positions results in an array B of the same
length such that A[i] == B[(i+x) % A.length], where % is the modulo operation.
"""


# Not mine.
# https://leetcode.com/problems/check-if-array-is-sorted-and-rotated/solutions/3033924/easy-deque-solution-beats-98-others/


from collections import deque 


class Solution:
    def check(self, nums):
        queue = deque(nums)

        for i in range(len(nums)):
            queue.rotate(1)

            if list(queue)==sorted(nums):
                return True

        return False


if __name__ == "__main__":
    print(Solution().check(nums = [3,4,5,1,2]))     # True
    print(Solution().check(nums = [2,1,3,4]))       # False
    print(Solution().check(nums = [1,2,3]))         # True
    print(Solution().check(nums = [6,10,6]))        # True
    

# Runtime: 44 ms, faster than 32.19% of Python3 online submissions
# Memory Usage: 13.8 MB, less than 95.17% of Python3 online submissions


#%%
