"""
910. Smallest Range II
Medium
https://leetcode.com/problems/smallest-range-ii/description/

You are given an integer array nums and an integer k.

For each index i where 0 <= i < nums.length, change nums[i] to be either nums[i] + k or nums[i] - k.

The score of nums is the difference between the maximum and minimum elements in nums.

Return the minimum score of nums after changing the values at each index.
"""


class Solution:
    def smallestRangeII(self, nums, k):
        return (max(nums) - k) - (min(nums) + k) 



if __name__ == '__main__':
    print(Solution().smallestRangeII(nums = [1], k = 0))              # 0
    print(Solution().smallestRangeII(nums = [0,10], k = 2))           # 6
    print(Solution().smallestRangeII(nums = [1,3,6], k = 3))          # 3    


# Failed


#%%  


class Solution:
    def smallestRangeII(self, nums, k):
        nums.sort()
        result = (nums[-1] - nums[0])

        for idx in range(len(nums)):
            minimum = min(nums[0] + k, nums[idx] - k)
            maximum = max(nums[idx - 1] + k, nums[-1] - k)
            result = min(result, maximum - minimum)

        return result


if __name__ == '__main__':
    print(Solution().smallestRangeII(nums = [1], k = 0))              # 0
    print(Solution().smallestRangeII(nums = [0,10], k = 2))           # 6
    print(Solution().smallestRangeII(nums = [1,3,6], k = 3))          # 3    


# Runtime: 361 ms, faster than 43.59% of Python3 online submissions
# Memory Usage: 15.4 MB, less than 18.80% of Python3 online submissions


#%%
