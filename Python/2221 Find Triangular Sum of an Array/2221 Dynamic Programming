"""
2221. Find Triangular Sum of an Array
Medium
https://leetcode.com/problems/find-triangular-sum-of-an-array/ 

You are given a 0-indexed integer array nums, where nums[i] is a digit between
0 and 9 (inclusive).

The triangular sum of nums is the value of the only element present in nums
after the following process terminates:

Let nums comprise of n elements. If n == 1, end the process. Otherwise, create
a new 0-indexed integer array newNums of length n - 1.
For each index i, where 0 <= i < n - 1, assign the value of newNums[i] as
(nums[i] + nums[i+1]) % 10, where % denotes modulo operator.
Replace the array nums with newNums.

Repeat the entire process starting from step 1.

Return the triangular sum of nums.
"""


class Solution:
    def triangularSum(self, nums):
        n = len(nums)

        for i in range(n, 0, -1):
            for j in range(i - 1):
                nums[j] = (nums[j] + nums[j + 1]) % 10

        return nums[0]


if __name__ == "__main__":
    print(Solution().triangularSum(nums = [1,2,3,4,5]))             # 8 
    print(Solution().triangularSum(nums = [5]))                     # 5 


# Runtime: 2758 ms, faster than 79.68% of Python3 online submissions for Find Triangular Sum of an Array.
# Memory Usage: 13.9 MB, less than 77.19% of Python3 online submissions for Find Triangular Sum of an Array.


#%% 
