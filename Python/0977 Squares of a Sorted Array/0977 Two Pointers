"""
977. Squares of a Sorted Array
Easy
https://leetcode.com/problems/squares-of-a-sorted-array/ 

Given an integer array nums sorted in non-decreasing order, return an array of 
the squares of each number sorted in non-decreasing order.
"""


class Solution:
    def sortedSquares(self, nums):
        n = len(nums)
        res = [0] * n
        
        i = 0
        j = (n - 1)
        k = (n - 1)
        
        while i <= j:
            if nums[i] * nums[i] < nums[j] * nums[j]:
                res[k] = nums[j] * nums[j]
                j -= 1                

            else:
                res[k] = nums[i] * nums[i]
                i += 1                
                
            k -= 1
            
        return res

 

if __name__ == "__main__":
    lc = Solution() 
    print(lc.sortedSquares(nums = [-4,-1,0,3,10]))       # [0,1,9,16,100]
    print(lc.sortedSquares(nums = [-7,-3,2,3,11]))       # [4,9,9,49,121] 


# Runtime: 220 ms, faster than 94.53% of Python3 online submissions for Squares of a Sorted Array.
# Memory Usage: 16.3 MB, less than 53.29% of Python3 online submissions for Squares of a Sorted Array.

