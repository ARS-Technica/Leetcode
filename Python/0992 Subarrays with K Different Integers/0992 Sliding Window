"""
992. Subarrays with K Different Integers
Hard
https://leetcode.com/problems/subarrays-with-k-different-integers/

Given an integer array nums and an integer k, return the number of good subarrays of nums.

A good array is an array where the number of different integers in that array is exactly k.

For example, [1,2,3,1,2] has 3 different integers: 1, 2, and 3.
A subarray is a contiguous part of an array.
"""


from collections import defaultdict


class Solution:
    def subarraysWithKDistinct(self, nums, k):
        def helper(k):
            counter = defaultdict(int)
            left = 0
            result = 0

            # Iterate over elements in our input
            for right, num in enumerate(nums):
                counter[num] += 1

                # Meet the condition to stop expansion
                while len(counter) > k: 
                    counter[nums[left]] -= 1

                    # Contract the window
                    if counter[nums[left]] == 0:
                        del counter[nums[left]]

                    left += 1

                result += right - left - 1

            return result

        return helper(k) - helper(k - 1)


if __name__ == '__main__':
    print(Solution().subarraysWithKDistinct(nums = [1,2,1,2,3], k = 2))             # 7
    print(Solution().subarraysWithKDistinct(nums = [1,2,1,3,4], k = 3))             # 3


# Runtime: 58 ms, faster than 85.65% of Python3 online submissions
# Memory Usage: 14 MB, less than 19.49% of Python3 online submissions


#%%
