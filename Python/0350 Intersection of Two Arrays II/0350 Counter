"""
350. Intersection of Two Arrays II
Easy
https://leetcode.com/problems/intersection-of-two-arrays-ii/ 

Given two integer arrays nums1 and nums2, return an array of their intersection
Each element in the result must appear as many times as it shows in both arrays
and you may return the result in any order.
"""

from collections import Counter


class Solution:
    def intersect(self, nums1, nums2):
        counts = collections.Counter(nums1)
        res = []

        for n in nums2:
            if counts[n] > 0:
                res += n,
                counts[n] -= 1

        return res      


if __name__ == "__main__":
    lc = Solution() 
    print(lc.intersect(nums1 = [1,2,2,1], nums2 = [2,2]))           # [2,2]
    print(lc.intersect(nums1 = [4,9,5], nums2 = [9,4,9,8,4]))       # [4,9] 
    print(lc.intersect(nums1 = [1,2,2,1], nums2 = [2]))             # [2]
    print(lc.intersect(nums1 = [3,1,2], nums2 = [1,1]))             # [1]


# Runtime: 47 ms, faster than 92.69% of Python3 online submissions for Intersection of Two Arrays II.
# Memory Usage: 13.9 MB, less than 88.08% of Python3 online submissions for Intersection of Two Arrays II.


#%% 

from collections import Counter


class Solution:
    def intersect(self, nums1, nums2):
        return list((Counter(nums1) & Counter(nums2)).elements())


if __name__ == "__main__":
    lc = Solution() 
    print(lc.intersect(nums1 = [1,2,2,1], nums2 = [2,2]))           # [2,2]
    print(lc.intersect(nums1 = [4,9,5], nums2 = [9,4,9,8,4]))       # [4,9] 
    print(lc.intersect(nums1 = [1,2,2,1], nums2 = [2]))             # [2]
    print(lc.intersect(nums1 = [3,1,2], nums2 = [1,1]))             # [1]


# Runtime: 59 ms, faster than 72.72% of Python3 online submissions for Intersection of Two Arrays II.
# Memory Usage: 14 MB, less than 55.16% of Python3 online submissions for Intersection of Two Arrays II.

