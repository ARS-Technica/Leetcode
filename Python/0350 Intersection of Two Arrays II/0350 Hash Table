"""
350. Intersection of Two Arrays II
Easy
https://leetcode.com/problems/intersection-of-two-arrays-ii/ 

Given two integer arrays nums1 and nums2, return an array of their intersection
Each element in the result must appear as many times as it shows in both arrays
and you may return the result in any order.
"""


class Solution:
    def intersect(self, nums1, nums2):
        hash1 = {}
        result = []
        
        for i in nums1:
        	if i in hash1:
        		hash1[i]+=1
        	else:
        		hash1[i]=1
                
        for i in nums2:
        	if i in hash1 and hash1[i] > 0:
        		result.append(i)
        		hash1[i] -= 1
                
        return result


if __name__ == "__main__":
    lc = Solution() 
    print(lc.intersect(nums1 = [1,2,2,1], nums2 = [2,2]))           # [2,2]
    print(lc.intersect(nums1 = [4,9,5], nums2 = [9,4,9,8,4]))       # [4,9] 
    print(lc.intersect(nums1 = [1,2,2,1], nums2 = [2]))             # [2]
    print(lc.intersect(nums1 = [3,1,2], nums2 = [1,1]))             # [1]


# Runtime: 50 ms, faster than 85.70% of Python3 online submissions for Intersection of Two Arrays II.
# Memory Usage: 14 MB, less than 55.16% of Python3 online submissions for Intersection of Two Arrays II.


#%%

# Not mine.
# https://leetcode.com/problems/intersection-of-two-arrays-ii/discuss/1747745/python-simple-and-easy

from collections import Counter


class Solution:
    def intersect(self, nums1, nums2):
        dict_nums1 = collections.Counter(nums1)
        dict_nums2 = collections.Counter(nums2)
        result_list = []
        
        for k, v in dict_nums1.items():
            if k in dict_nums2:
                result_list += [k for i in range(min(v, dict_nums2[k]))]
                
        return result_list


if __name__ == "__main__":
    lc = Solution() 
    print(lc.intersect(nums1 = [1,2,2,1], nums2 = [2,2]))           # [2,2]
    print(lc.intersect(nums1 = [4,9,5], nums2 = [9,4,9,8,4]))       # [4,9] 
    print(lc.intersect(nums1 = [1,2,2,1], nums2 = [2]))             # [2]
    print(lc.intersect(nums1 = [3,1,2], nums2 = [1,1]))             # [1]


# Runtime: 55 ms, faster than 78.56% of Python3 online submissions for Intersection of Two Arrays II.
# Memory Usage: 14.1 MB, less than 17.69% of Python3 online submissions for Intersection of Two Arrays II.

