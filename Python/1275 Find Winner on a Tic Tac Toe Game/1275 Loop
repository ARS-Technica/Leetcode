"""
1275. Find Winner on a Tic Tac Toe Game
Easy
https://leetcode.com/problems/find-winner-on-a-tic-tac-toe-game/description/ 

Tic-tac-toe is played by two players A and B on a 3 x 3 grid. The rules of Tic-Tac-Toe are:

Players take turns placing characters into empty squares ' '.

The first player A always places 'X' characters, while the second player B always places 'O' characters.

'X' and 'O' characters are always placed into empty squares, never on filled ones.

The game ends when there are three of the same (non-empty) character filling any row, column, or diagonal.

The game also ends if all squares are non-empty.

No more moves can be played if the game is over.

Given a 2D integer array moves where moves[i] = [rowi, coli] indicates that the
ith move will be played on grid[rowi][coli]. return the winner of the game if
it exists (A or B). In case the game ends in a draw return "Draw". If there are
still movements to play return "Pending".

You can assume that moves is valid (i.e., it follows the rules of Tic-Tac-Toe),
the grid is initially empty, and A will play first.
"""


class Solution:
    def tictactoe(self, moves):
        n = len(moves)
        counter = [0] * 8

        for i in range(n - 1, -1, -2):
            row, col = moves[i][0], moves[i][1]
            counter[row] += 1
            counter[col + 3] += 1

            if row == col:
                counter[6] += 1
            if row + col == 2:
                counter[7] += 1
            if (counter[row] == 3
                or counter[col + 3] == 3
                or counter[6] == 3
                or counter[7] == 3):
                return "A" if (i % 2) == 0 else "B"

        return "Draw" if n == 9 else "Pending"


if __name__ == "__main__":
    print(Solution().tictactoe(moves = [[0,0],[2,0],[1,1],[2,1],[2,2]]))                            # "A"
    print(Solution().tictactoe(moves = [[0,0],[1,1],[0,1],[0,2],[1,0],[2,0]]))                      # "B"
    print(Solution().tictactoe(moves = [[0,0],[1,1],[2,0],[1,0],[1,2],[2,1],[0,1],[0,2],[2,2]]))    # "Draw"
    print(Solution().tictactoe(moves = [[0,0],[1,1]]))                                              # "Pending"
    print(Solution().tictactoe(moves = [[0,2],[2,0],[2,1],[0,1],[1,2]]))                            # "Pending"


# Runtime: 32 ms, faster than 84.42% of Python3 online submissions
# Memory Usage: 14 MB, less than 31.40% of Python3 online submissions


#%%
