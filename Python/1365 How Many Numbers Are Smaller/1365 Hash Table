

# Better solution. Not mine.
# https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number/discuss/819148/Python-3-greater-91.11-faster.-52ms-time.-Explanation-added


class Solution:
    def smallerNumbersThanCurrent(self, nums):
        temp = sorted(nums)
        mapping = {}
        result = []
    
        for i in range(len(temp)):
            if temp[i] not in mapping:
                mapping[temp[i]] = i
            
        for i in range(len(nums)):
            result.append(mapping[nums[i]])
        
        return result
            

if __name__ == "__main__":
    lc = Solution() 
    print(lc.smallerNumbersThanCurrent([8,1,2,2,3]))            # [4,0,1,1,3]
    print(lc.smallerNumbersThanCurrent([6,5,4,8]))              # [2,1,0,3]
    print(lc.smallerNumbersThanCurrent([7,7,7,7]))              # [0,0,0,0]


# Runtime: 68 ms, faster than 86.73% of Python3 online submissions for How Many Numbers Are Smaller Than the Current Number.
# Memory Usage: 13.8 MB, less than 90.65% of Python3 online submissions for How Many Numbers Are Smaller Than the Current Number.

