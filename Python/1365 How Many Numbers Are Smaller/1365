"""
1365. How Many Numbers Are Smaller Than the Current Number
Easy
https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number/

Given the array nums, for each nums[i] find out how many numbers in the array 
are smaller than it. That is, for each nums[i] you have to count the number of 
valid j's such that j != i and nums[j] < nums[i].

Return the answer in an array.
"""

# Brute Force (Naive Solution)


class Solution:
    def smallerNumbersThanCurrent(self, nums):
        res = []
        
        for i in range(len(nums)): 
            counter = 0
            for j in range(len(nums)): 
                if i != j:
                    if nums[i] > nums[j]:
                        counter += 1
            
            res.append(counter)
        return res                    
            

if __name__ == "__main__":
    lc = Solution() 
    print(lc.smallerNumbersThanCurrent([8,1,2,2,3]))            # [4,0,1,1,3]
    print(lc.smallerNumbersThanCurrent([6,5,4,8]))              # [2,1,0,3]
    print(lc.smallerNumbersThanCurrent([7,7,7,7]))              # [0,0,0,0]


# Runtime: 492 ms, faster than 25.19% of Python3 online submissions for How Many Numbers Are Smaller Than the Current Number.
# Memory Usage: 13.9 MB, less than 61.54% of Python3 online submissions for How Many Numbers Are Smaller Than the Current Number.

