# Better solution.  Not mine.
# https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/discuss/1204606/One-pass-92-speed

class Solution:
    def removeDuplicates(self, nums):
        prev = nums[0]
        count = 1
        idx = 1
        
        while idx < len(nums):
            if nums[idx] == prev:
                if count < 2:
                    count += 1
                    idx += 1
                else:
                    nums.pop(idx)
            else:
                prev = nums[idx]
                count = 1
                idx += 1
        return idx


if __name__ == "__main__":
    lc = Solution() 
    print(lc.removeDuplicates([1,1,1,2,2,3]))                   #Output: 5, nums = [1,1,2,2,3,_]
    print(lc.removeDuplicates([0,0,1,1,1,1,2,3,3]))             #Output: 7, nums = [0,0,1,1,2,3,3,_,_]


# Runtime: 60 ms, faster than 51.76% of Python3 online submissions for Remove Duplicates from Sorted Array II.
# Memory Usage: 14 MB, less than 99.61% of Python3 online submissions for Remove Duplicates from Sorted Array II.
