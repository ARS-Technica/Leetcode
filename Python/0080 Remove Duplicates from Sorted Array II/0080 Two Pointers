
"""
80. Remove Duplicates from Sorted Array II
Created on Fri Jan 28 03:49:21 2022
https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/
"""

'''
Given an integer array nums sorted in non-decreasing order, remove some duplicates 
in-place such that each unique element appears at most twice. The relative order 
of the elements should be kept the same.

Since it is impossible to change the length of the array in some languages, you 
must instead have the result be placed in the first part of the array nums. More 
formally, if there are k elements after removing the duplicates, then the first 
k elements of nums should hold the final result. It does not matter what you leave 
beyond the first k elements.

Return k after placing the final result in the first k slots of nums.

Do not allocate extra space for another array. You must do this by modifying 
the input array in-place with O(1) extra memory.
'''


class Solution:
    def removeDuplicates(self, nums):
        left = 0
        
        for right in nums:
            if left < 2 or right != nums[left - 2]:
                nums[left] = right
                left += 1
        return left


if __name__ == "__main__":
    lc = Solution() 
    print(lc.removeDuplicates([1,1,1,2,2,3]))                   #Output: 5, nums = [1,1,2,2,3,_]
    print(lc.removeDuplicates([0,0,1,1,1,1,2,3,3]))             #Output: 7, nums = [0,0,1,1,2,3,3,_,_]


# Runtime: 90 ms, faster than 23.27% of Python3 online submissions for Remove Duplicates from Sorted Array II.
# Memory Usage: 13.9 MB, less than 99.61% of Python3 online submissions for Remove Duplicates from Sorted Array II.
