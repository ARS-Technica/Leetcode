"""
2496. Maximum Value of a String in an Array
Easy
https://leetcode.com/problems/maximum-value-of-a-string-in-an-array/description/ 

The value of an alphanumeric string can be defined as:

The numeric representation of the string in base 10, if it comprises of digits only.

The length of the string, otherwise.

Given an array strs of alphanumeric strings, return the maximum value of any string in strs.
"""


class Solution:
    def maximumValue(self, strs):
        result = []

        for idx in strs:
            try:
                result.append(int(idx))
            except:
                result.append(len(idx))

        return max(result)


if __name__ == '__main__':
    print(Solution().maximumValue(strs = ["alic3","bob","3","4","00000"]))      # 5
    print(Solution().maximumValue(strs = ["1","01","001","0001"]))              # 1


# Runtime: 36 ms, faster than 83.73% of Python3 online submissions
# Memory Usage: 13.9 MB, less than 13.11% of Python3 online submissions


#%%


class Solution:
    def maximumValue(self, strs):
        result = 0

        for idx in strs:
            try:
                result = max(int(idx), result)
            except:
                result = max(len(idx), result)

        return result


if __name__ == '__main__':
    print(Solution().maximumValue(strs = ["alic3","bob","3","4","00000"]))      # 5
    print(Solution().maximumValue(strs = ["1","01","001","0001"]))              # 1


# Runtime: 32 ms, faster than 92.59% of Python3 online submissions
# Memory Usage: 13.8 MB, less than 59.81% of Python3 online submissions


#%%


class Solution:
    def maximumValue(self, strs):
        result = []

        for idx in strs:
            if idx.isnumeric():
                result.append(int(idx))
            else:
                result.append(len(idx))

        return max(result)


if __name__ == '__main__':
    print(Solution().maximumValue(strs = ["alic3","bob","3","4","00000"]))      # 5
    print(Solution().maximumValue(strs = ["1","01","001","0001"]))              # 1


# Runtime: 86 ms, faster than 5.18% of Python3 online submissions
# Memory Usage: 13.9 MB, less than 13.11% of Python3 online submissions


#%%
