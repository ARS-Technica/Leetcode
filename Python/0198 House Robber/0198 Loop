"""
198. House Robber
Medium
https://leetcode.com/problems/house-robber/description/

You are a professional robber planning to rob houses along a street. Each house
has a certain amount of money stashed, the only constraint stopping you from
robbing each of them is that adjacent houses have security systems connected and
it will automatically contact the police if two adjacent houses were broken
into on the same night.

Given an integer array nums representing the amount of money of each house,
return the maximum amount of money you can rob tonight without alerting the police.
"""


# Failed


class Solution:
    def rob(self, nums):
        evens = sum([n for i, n in enumerate(nums) if i % 2 == 0])
        odds = sum([n for i, n in enumerate(nums) if i % 2 != 0])

        return max(evens, odds)


if __name__ == '__main__':
    print(Solution().rob(nums = [1,2,3,1]))         # 4
    print(Solution().rob(nums = [2,7,9,3,1]))       # 12
    print(Solution().rob(nums = [2,1,1,2]))         # 4

# Doesn't work for nums = [2,1,1,2]
# Fails to take into consideration that there can be more than one house between targets.


#%%


class Solution:
    def rob(self, nums):
        i, j = 0, nums[0]

        if len(nums) == 1: return j

        for num in nums[1:]:
            i, j = j, max(num + i, j)

        return j


if __name__ == '__main__':
    print(Solution().rob(nums = [1,2,3,1]))         # 4
    print(Solution().rob(nums = [2,7,9,3,1]))       # 12
    print(Solution().rob(nums = [2,1,1,2]))         # 4


# Runtime: 22 ms, faster than 99.35% of Python3 online submissions
# Memory Usage: 13.8 MB, less than 57.63% of Python3 online submissions


#%%
