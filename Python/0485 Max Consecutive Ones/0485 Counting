"""
485. Max Consecutive Ones
Easy
https://leetcode.com/problems/max-consecutive-ones/

Given a binary array nums, return the maximum number of consecutive 1's in the array.
"""


class Solution:
    def findMaxConsecutiveOnes(self, nums):
        count = 0
        result = 0

        for n in nums:
            if n == 1:
                count += 1
            else:
                result = max(count, result)
                count = 0

        return max(count, result)


if __name__ == '__main__':
    print(Solution().findMaxConsecutiveOnes(nums = [1,1,0,1,1,1]))          # 3
    print(Solution().findMaxConsecutiveOnes(nums = [1,0,1,1,0,1]))          # 2
    print(Solution().findMaxConsecutiveOnes(nums = [0]))                    # 0


# Runtime: 744 ms, faster than 62.42% of Python3 online submissions for Max Consecutive Ones.
# Memory Usage: 14.4 MB, less than 28.87% of Python3 online submissions for Max Consecutive Ones.

# The simpliest method proves more efficent.


#%%


# Not mine. 
# https://leetcode.com/problems/max-consecutive-ones/discuss/711867/Python-one-liner-simple


class Solution:
    def findMaxConsecutiveOnes(self, nums):
        return max(list(map(len, ("".join(list(map(str, nums)))).split('0'))))


if __name__ == '__main__':
    print(Solution().findMaxConsecutiveOnes(nums = [1,1,0,1,1,1]))          # 3
    print(Solution().findMaxConsecutiveOnes(nums = [1,0,1,1,0,1]))          # 2
    print(Solution().findMaxConsecutiveOnes(nums = [0]))                    # 0


# Runtime: 510 ms, faster than 73.16% of Python3 online submissions for Max Consecutive Ones.
# Memory Usage: 15 MB, less than 5.06% of Python3 online submissions for Max Consecutive Ones.


#%%
