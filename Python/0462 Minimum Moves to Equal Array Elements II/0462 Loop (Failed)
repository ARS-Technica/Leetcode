"""
462. Minimum Moves to Equal Array Elements II
Medium
https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/ 

Given an integer array nums of size n, return the minimum number of moves 
required to make all array elements equal.

In one move, you can increment or decrement an element of the array by 1.

Test cases are designed so that the answer will fit in a 32-bit integer.


Constraints:

n == nums.length
1 <= nums.length <= 105
-109 <= nums[i] <= 109
"""
 

class Solution:
    def minMoves2(self, nums):
        average = 0
        res = 0
        
        for idx in range(len(nums)):
            average += nums[idx]
        average /= len(nums)
        average = round(average)
        
        for idx in range(len(nums)):
            res += max(nums[idx], average) - min(nums[idx], average)
            
        return res
 

if __name__ == "__main__":
    lc = Solution() 
    print(lc.minMoves2(nums = [1,2,3]))         # 2
    print(lc.minMoves2(nums = [1,10,2,9]))      # 16 
    print(lc.minMoves2(nums = [1,0,0,8,6]))     # 14 

# Returns 16 instead of 14 for (nums = [1,0,0,8,6])

