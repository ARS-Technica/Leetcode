"""
1346. Check If N and Its Double Exist
Easy
https://leetcode.com/problems/check-if-n-and-its-double-exist/ 

Given an array arr of integers, check if there exists two integers N and M such
that N is the double of M ( i.e. N = 2 * M).

More formally check if there exists two indices i and j such that :

i != j
0 <= i, j < arr.length
arr[i] == 2 * arr[j]

Constraints:

2 <= arr.length <= 500
-10^3 <= arr[i] <= 10^3
"""


class Solution:
    def checkIfExist(self, arr):
        arr.sort()
        
        for idx in range(1, len(arr)):
            left = 0
            right = idx - 1
            
            while left <= right:
                middle = (left + right) // 2
                guess = arr[middle] * 2 if arr[middle] > 0 else arr[middle] / 2
                
                if guess == arr[idx]:
                    return True
                
                elif guess > arr[idx]:
                    right = middle - 1
                    
                else:
                    left = middle + 1
                    
        return False


if __name__ == "__main__":
    lc = Solution() 
    print(lc.checkIfExist(arr = [10,2,5,3]))                    # true
    print(lc.checkIfExist(arr = [7,1,14,11]))                   # true
    print(lc.checkIfExist(arr = [3,1,7,11]))                    # false
    print(lc.checkIfExist(arr = [-2,0,10,-19,4,6,-8]))          # false
    print(lc.checkIfExist(arr = [-20,8,-6,-14,0,-19,14,4]))     # true
    print(lc.checkIfExist(arr = [7,1,14,11]))                   # true
    

# Runtime: 60 ms, faster than 77.08% of Python3 online submissions for Check If N and Its Double Exist.
# Memory Usage: 14 MB, less than 56.74% of Python3 online submissions for Check If N and Its Double Exist.


#%%
