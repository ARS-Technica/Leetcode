"""
1248. Count Number of Nice Subarrays
Medium
https://leetcode.com/problems/count-number-of-nice-subarrays/ 

Given an array of integers nums and an integer k. A continuous subarray is
called nice if there are k odd numbers on it.

Return the number of nice sub-arrays.
"""


class Solution:
  def numberOfSubarrays(self, nums, k):
    def numberOfSubarraysAtMost(k):
      left, right = 0, 0      
      res = 0

      while right <= len(nums):
        if k >= 0:
          res += right - left

          if right == len(nums):
            break

          if nums[right] & 1:
            k -= 1

          right += 1

        else:
          if nums[left] & 1:
            k += 1

          left += 1

      return res

    return numberOfSubarraysAtMost(k) - numberOfSubarraysAtMost(k - 1)


if __name__ == "__main__":
    print(Solution().numberOfSubarrays(nums = [1,1,2,1,1], k = 3))              # 2
    print(Solution().numberOfSubarrays(nums = [2,4,6], k = 1))                  # 0
    print(Solution().numberOfSubarrays(nums = [2,2,2,1,2,2,1,2,2,2], k = 2))    # 16  


# Runtime: 3064 ms, faster than 5.02% of Python3 online submissions for Count Number of Nice Subarrays.
# Memory Usage: 20.5 MB, less than 85.56% of Python3 online submissions for Count Number of Nice Subarrays.


#%%
