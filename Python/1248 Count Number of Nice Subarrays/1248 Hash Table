"""
1248. Count Number of Nice Subarrays
Medium
https://leetcode.com/problems/count-number-of-nice-subarrays/ 

Given an array of integers nums and an integer k. A continuous subarray is
called nice if there are k odd numbers on it.

Return the number of nice sub-arrays.
"""


# Better solution. Not mine.
# https://leetcode.com/problems/count-number-of-nice-subarrays/discuss/419992/easy-peasy-python-solution-with-explanation


class Solution:
  def numberOfSubarrays(self, nums, k):
      count = 0
      dic = { 0: 1 }
      res = 0

      for idx, num in enumerate(nums):
          if num % 2 == 1:
              count += 1

          if count - k in dic:
              res += dic[count - k]               

          dic[count] = dic.get(count, 0) + 1

      return res


if __name__ == "__main__":
    print(Solution().numberOfSubarrays(nums = [1,1,2,1,1], k = 3))              # 2
    print(Solution().numberOfSubarrays(nums = [2,4,6], k = 1))                  # 0
    print(Solution().numberOfSubarrays(nums = [2,2,2,1,2,2,1,2,2,2], k = 2))    # 16  


# Runtime: 1913 ms, faster than 38.61% of Python3 online submissions for Count Number of Nice Subarrays.
# Memory Usage: 21.6 MB, less than 24.69% of Python3 online submissions for Count Number of Nice Subarrays.


#%%
