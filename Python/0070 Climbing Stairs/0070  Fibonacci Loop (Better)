class Solution:
    def climbStairs(self, n):
        first, second = 0, 1
        for idx in range(n):
            first, second = second, first + second
        return second        


if __name__ == "__main__":
    lc = Solution() 
    print(lc.climbStairs(2))      # 2
    print(lc.climbStairs(3))      # 3
    print(lc.climbStairs(4))      # 5
    print(lc.climbStairs(5))      # 8   

# Runtime: 32 ms, faster than 76.67% of Python3 online submissions for Climbing Stairs.
# Memory Usage: 13.8 MB, less than 89.20% of Python3 online submissions for Climbing Stairs.


#%%


class Solution:
    def climbStairs(self, n):
        if n == 0 or n == 1:
            return 1
        first, second = 0, 1
        for idx in range(n):
            first, second = second, first + second
        return second        


if __name__ == "__main__":
    lc = Solution() 
    print(lc.climbStairs(2))      # 2
    print(lc.climbStairs(3))      # 3
    print(lc.climbStairs(4))      # 5
    print(lc.climbStairs(5))      # 8   

# Runtime: 28 ms, faster than 90.46% of Python3 online submissions for Climbing Stairs.
# Memory Usage: 13.8 MB, less than 89.20% of Python3 online submissions for Climbing Stairs.

