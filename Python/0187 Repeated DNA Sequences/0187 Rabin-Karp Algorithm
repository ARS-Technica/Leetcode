"""
187. Repeated DNA Sequences
Medium
https://leetcode.com/problems/repeated-dna-sequences/ 

The DNA sequence is composed of a series of nucleotides abbreviated as 'A', 'C', 'G', and 'T'.

For example, "ACGAATTCCG" is a DNA sequence.
When studying DNA, it is useful to identify repeated sequences within the DNA.

Given a string s that represents a DNA sequence, return all the 10-letter-long
sequences (substrings) that occur more than once in a DNA molecule. You may
return the answer in any order.
"""


# Rabin-Karp Algorithm. Not mine. 
# https://leetcode.com/problems/repeated-dna-sequences/discuss/2507418/Python-Rabin-Karp


class Solution(object):
    def findRepeatedDnaSequences(self, s):
        dict_map = {"A":0,"G":1,"C":2, "T":3}
        res = {}
        rst = []
        value = 0 
        
        for i in range(len(s)):
            if i < 9:
                value = 4 * value + dict_map[s[i]]
            elif i == 9:
                value = 4 * value + dict_map[s[i]]
                res[value] = s[:10]
            else:
                value = (value - dict_map[s[i-10]]*(4**9)) * 4 + dict_map[s[i]]
                if value in res:
                    rst.append(res[value])
                else:
                    res[value] = s[i-9:i+1]

        return list(set(rst))


if __name__ == '__main__':
    print(Solution().findRepeatedDnaSequences(s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT"))  # ["AAAAACCCCC","CCCCCAAAAA"]
    print(Solution().findRepeatedDnaSequences(s = "AAAAAAAAAAAAA"))                     # ["AAAAAAAAAA"]

