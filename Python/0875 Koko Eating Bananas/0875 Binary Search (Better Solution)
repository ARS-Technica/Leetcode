class Solution:
    def minEatingSpeed(self, piles, h):
        left = 1
        right = max(piles)
        
        while left < right:
            middle = left  + (right - left) // 2
            
            if sum(math.ceil(pile / middle) for pile in piles) <= h:
                right = middle
            else:
                left = middle + 1
        
        return left      
 

if __name__ == "__main__":
    lc = Solution() 
    print(lc.minEatingSpeed([3,6,7,11], 8))              # 4
    print(lc.minEatingSpeed([30,11,23,4,20], 5))         # 30
    print(lc.minEatingSpeed([30,11,23,4,20], 6))         # 23


# 
