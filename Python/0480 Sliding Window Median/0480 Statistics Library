"""
480. Sliding Window Median
Hard
https://leetcode.com/problems/sliding-window-median/

The median is the middle value in an ordered integer list. If the size of the
list is even, there is no middle value. So the median is the mean of the two
middle values.

For examples, if arr = [2,3,4], the median is 3.
For examples, if arr = [1,2,3,4], the median is (2 + 3) / 2 = 2.5.
You are given an integer array nums and an integer k. There is a sliding window
of size k which is moving from the very left of the array to the very right.
You can only see the k numbers in the window. Each time the sliding window moves
right by one position.

Return the median array for each window in the original array. Answers within
10-5 of the actual value will be accepted.
"""


from statistics import median


class Solution:
    def medianSlidingWindow(self, nums, k):
        result = []

        for idx in range(0, len(nums) - (k - 1)):
            answer = float( median(nums[idx : idx + k]) )
            result.append(answer)

        return result


if __name__ == '__main__':
    print(Solution().medianSlidingWindow(nums = [1,3,-1,-3,5,3,6,7], k = 3))          
    # [1.00000,-1.00000,-1.00000,3.00000,5.00000,6.00000]
    print(Solution().medianSlidingWindow(nums = [1,2,3,4,2,3,1,4,2], k = 3))        
    # [2.00000,3.00000,3.00000,3.00000,2.00000,3.00000,2.00000]


# Runtime: 5072 ms, faster than 17.14% of Python3 online submissions
# Memory Usage: 15.8 MB, less than 79.68% of Python3 online submissions


#%%
