"""
487. Max Consecutive Ones II
Medium
https://leetcode.com/problems/max-consecutive-ones-ii

Given a binary array nums, return the maximum number of consecutive 1's in the
array if you can flip at most one 0.
"""


# Failed


class Solution:
    def findMaxConsecutiveOnes(self, nums):
        left = 0
        result = 0

        for right, num in enumerate(nums):
            if num == 0:
                left = right + 1
            
            result = max(result, right - left + 1)

        return result


if __name__ == '__main__':
    print(Solution().findMaxConsecutiveOnes(nums = [1,1,1,0,0,0,1,1,1,1,0]))                    # 5
    print(Solution().findMaxConsecutiveOnes(nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1]))    # 6
    print(Solution().findMaxConsecutiveOnes(nums = [0,1,1,1,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1]))# 6
    print(Solution().findMaxConsecutiveOnes(nums = [1,1,1]))                                    # 3
    print(Solution().findMaxConsecutiveOnes(nums = [0]))                                        # 1


# Locked.  Can't be tested.
# Failed


#%%


# Time Complexity: O(N) | Space Complexity: O(1)


class Solution:
    def findMaxConsecutiveOnes(self, nums):
        left = -1
        result = 0
        right = 0

        for num in nums:
            if num == 1:
                right += 1

            else:
                result = max(result, left + right + 1)
                left, right = right, 0

        return max(result, left + right + 1)


if __name__ == '__main__':
    print(Solution().findMaxConsecutiveOnes(nums = [1,1,1,0,0,0,1,1,1,1,0]))                    # 5
    print(Solution().findMaxConsecutiveOnes(nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1]))    # 6
    print(Solution().findMaxConsecutiveOnes(nums = [0,1,1,1,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1]))# 6
    print(Solution().findMaxConsecutiveOnes(nums = [1,1,1]))                                    # 3
    print(Solution().findMaxConsecutiveOnes(nums = [0]))                                        # 1


# Locked.  Can't be tested.


#%%
