"""
487. Max Consecutive Ones II
Medium
https://leetcode.com/problems/max-consecutive-ones-ii

Given a binary array nums, return the maximum number of consecutive 1's in the
array if you can flip at most one 0.
"""


class Solution:
    def findMaxConsecutiveOnes(self, nums):
        def adjacentZeros(arr):
            most_ones = ones.index(max(ones))

            if most_ones > 0:
                if ones[most_ones - 1] == 0:
                    return max(ones) + 1
            if most_ones < len(arr):
                if ones[most_ones + 1] == 0:
                    return max(ones) + 1            
            ones.pop(most_ones) 

        if set(nums) == {1}: return len(nums)
        if set(nums) == {0}: return 0
        ones = list(map(len, ''.join(map(str, nums)).split('0')))
        return adjacentZeros(ones)


if __name__ == '__main__':
    print(Solution().findMaxConsecutiveOnes(nums = [1,1,1,0,0,0,1,1,1,1,0]))                    # 5
    print(Solution().findMaxConsecutiveOnes(nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1]))    # 5
    print(Solution().findMaxConsecutiveOnes(nums = [0,1,1,1,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1]))# 6
    print(Solution().findMaxConsecutiveOnes(nums = [1,1,1]))                                    # 3
    print(Solution().findMaxConsecutiveOnes(nums = [0]))                                        # 3


# Locked.  Can't be tested.


#%%
