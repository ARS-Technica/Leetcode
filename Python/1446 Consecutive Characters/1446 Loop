"""
1446. Consecutive Characters
Easy
https://leetcode.com/problems/consecutive-characters/

The power of the string is the maximum length of a non-empty substring that contains only one unique character.

Given a string s, return the power of s.
"""


class Solution:
    def maxPower(self, s):
        count = 0
        result = 0

        for idx, char in enumerate(s):
            if idx == 0:
                count += 1
            elif char == s[idx - 1]:
                count += 1
            else:
                count = 1

            result = max(count, result)

        return result


if __name__ == '__main__':
    print(Solution().maxPower(s = "leetcode"))                          # 2
    print(Solution().maxPower(s = "abbcccddddeeeeedcba"))               # 5 


# Runtime: 126 ms, faster than 9.58% of Python3 online submissions for Consecutive Characters.
# Memory Usage: 14 MB, less than 13.68% of Python3 online submissions for Consecutive Characters.


#%%


class Solution:
    def maxPower(self, s):
        count = 0
        result = 0

        for idx, char in enumerate(s):
            if idx == 0 or char == s[idx - 1]:
                count += 1
            else:
                count = 1

            result = max(count, result)

        return result


if __name__ == '__main__':
    print(Solution().maxPower(s = "leetcode"))                          # 2
    print(Solution().maxPower(s = "abbcccddddeeeeedcba"))               # 5 


# Runtime: 94 ms, faster than 41.29% of Python3 online submissions for Consecutive Characters.
# Memory Usage: 13.9 MB, less than 13.68% of Python3 online submissions for Consecutive Characters.


#%%
