"""
2414. Length of the Longest Alphabetical Continuous Substring
Medium
https://leetcode.com/problems/length-of-the-longest-alphabetical-continuous-substring/

An alphabetical continuous string is a string consisting of consecutive letters
in the alphabet. In other words, it is any substring of the string "abcdefghijklmnopqrstuvwxyz".

For example, "abc" is an alphabetical continuous string, while "acb" and "za" are not.
Given a string s consisting of lowercase letters only, return the length of the
longest alphabetical continuous substring.
"""


# Similar to problem 1446
# Time Complexity O(N) | Space Complexity: O(1)


class Solution:
    def longestContinuousSubstring(self, s):
        count = 1 
        length = len(s)
        result = 0

        if length == 1: return 1

        for idx in range(0, length - 1):
            if ord(s[idx]) + 1 == ord(s[idx + 1]):
                count += 1
            else:
                count = 1

            result = max(count, result)

        return result


if __name__ == '__main__':
    print(Solution().longestContinuousSubstring(s = "abacaba"))             # 2
    print(Solution().longestContinuousSubstring(s = "abcde"))               # 5 


# Runtime: 720 ms, faster than 72.35% of Python3 online submissions for Consecutive Characters.
# Memory Usage: 15 MB, less than 61.29% of Python3 online submissions for Consecutive Characters.


#%%
