"""
494. Target Sum
Medium
https://leetcode.com/problems/target-sum/description/

You are given an integer array nums and an integer target.

You want to build an expression out of nums by adding one of the symbols '+'
and '-' before each integer in nums and then concatenate all the integers.

For example, if nums = [2, 1], you can add a '+' before 2 and a '-' before 1
and concatenate them to build the expression "+2-1".

Return the number of different expressions that you can build, which evaluates
to target.
"""


class Solution:
    def findTargetSumWays(self, nums, target):
        if len(nums) == 1 and nums[0] == target: return 1
        if len(nums) == 1 and nums[0] < target: return 0

        total = sum(nums)
        summ = 0
        result = 1
        length = len(nums)
        difference = abs(total - target) 

        for i in range(0, length):
            for j in range(i, length): 
                for k in range(i, j + 1):
                    summ += nums[k]

                if summ == difference: result += 1
                summ = 0

        return result 


if __name__ == "__main__":
    print(Solution().findTargetSumWays(nums = [1,1,1,1,1], target = 3))         # 5
    print(Solution().findTargetSumWays(nums = [1], target = 1))                 # 1
    print(Solution().findTargetSumWays(nums = [1,0], target = 1))               # 2
    print(Solution().findTargetSumWays(nums = [1], target = 2))                 # 0
    print(Solution().findTargetSumWays(nums = [0,0,0,0,0,0,0,0,1], target = 1)) # 256


# Doesn't work for nums = [0,0,0,0,0,0,0,0,1], target = 1 


#%%
