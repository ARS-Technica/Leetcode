"""
494. Target Sum
Medium
https://leetcode.com/problems/target-sum/description/

You are given an integer array nums and an integer target.

You want to build an expression out of nums by adding one of the symbols '+'
and '-' before each integer in nums and then concatenate all the integers.

For example, if nums = [2, 1], you can add a '+' before 2 and a '-' before 1
and concatenate them to build the expression "+2-1".

Return the number of different expressions that you can build, which evaluates
to target.
"""


class Solution:
    def findTargetSumWays(self, nums, target):
        s = sum(nums)

        if s < target or (s - target) % 2 != 0: return 0

        difference = (s - target) // 2
        result = [0] * (difference + 1)
        result[0] = 1

        for i in nums:
            for j in range(difference, i - 1, -1):
                result[j] += result[j - i]

        return result[-1]


if __name__ == "__main__":
    print(Solution().findTargetSumWays(nums = [1,1,1,1,1], target = 3))         # 5
    print(Solution().findTargetSumWays(nums = [1], target = 1))                 # 1
    print(Solution().findTargetSumWays(nums = [1,0], target = 1))               # 2


# Runtime: 77 ms, faster than 97.3% of Python3 online submissions
# Memory Usage: 13.8 MB, less than 99.85% of Python3 online submissions


#%%


from collections import defaultdict


class Solution:
    def findTargetSumWays(self, nums, target):
        if not nums or sum(nums)< target: return 0

        result = {0:1}

        for i in range(len(nums)):
            temp_dic = defaultdict(int)

            for k in result:
                temp_dic[k+nums[i]] += result[k]
                temp_dic[k-nums[i]] += result[k]

            result = temp_dic

        return result[target]


if __name__ == "__main__":
    print(Solution().findTargetSumWays(nums = [1,1,1,1,1], target = 3))         # 5
    print(Solution().findTargetSumWays(nums = [1], target = 1))                 # 1
    print(Solution().findTargetSumWays(nums = [1,0], target = 1))               # 2


# Runtime: 213 ms, faster than 82.41% of Python3 online submissions
# Memory Usage: 14.1 MB, less than 77.80% of Python3 online submissions


#%%
