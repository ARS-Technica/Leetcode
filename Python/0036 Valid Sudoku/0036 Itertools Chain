

# Not mine.
# https://leetcode.com/problems/valid-sudoku/solutions/422232/8-lines-python3-solution-using-set-100-ms-faster-than-98-30/


from itertools import chain


class Solution:
    def isValidSudoku(self, board):
        rows = board
        columns = [tuple(row[i] for row in rows) for i in range(len(rows[0]))]
        boxes = [tuple(chain.from_iterable([row[j:j+3] for row in rows[i:i+3]]))
                 for i in (0, 3, 6) for j in (0, 3, 6)]

        for group in rows + columns + boxes:
            if len(set(group) - {'.'}) + group.count('.') != 9:
                return False

        return True


if __name__ == '__main__':
    print(Solution().isValidSudoku(board = 
[["5","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".",".","5"]
,[".",".",".",".","8",".",".","7","9"]]))              # True

    print(Solution().isValidSudoku(board = 
[["8","3",".",".","7",".",".",".","."]
,["6",".",".","1","9","5",".",".","."]
,[".","9","8",".",".",".",".","6","."]
,["8",".",".",".","6",".",".",".","3"]
,["4",".",".","8",".","3",".",".","1"]
,["7",".",".",".","2",".",".",".","6"]
,[".","6",".",".",".",".","2","8","."]
,[".",".",".","4","1","9",".",".","5"]
,[".",".",".",".","8",".",".","7","9"]]))               # False 

    print(Solution().isValidSudoku(board =
[[".",".",".",".","5",".",".","1","."]
 ,[".","4",".","3",".",".",".",".","."]
 ,[".",".",".",".",".","3",".",".","1"]
 ,["8",".",".",".",".",".",".","2","."]
 ,[".",".","2",".","7",".",".",".","."]
 ,[".","1","5",".",".",".",".",".","."]
 ,[".",".",".",".",".","2",".",".","."]
 ,[".","2",".","9",".",".",".",".","."]
 ,[".",".","4",".",".",".",".",".","."]]))               # False 


# Runtime: 107 ms, faster than 78.34% of Python3 online submissions
# Memory Usage: 14.1 MB, less than 6.29% of Python3 online submissions


#%%
